// <auto-generated />
using GCourrier.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GCourrier.Server.Migrations
{
    [DbContext(typeof(GCourrierDbContext))]
    partial class GCourrierDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GCourrier.Shared.Agent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Agent");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 1,
                            Email = "abd@samobay.com",
                            FirstName = "Abd",
                            LastName = "ElMonem",
                            PhotoPath = "images/abd.png",
                            Power = 1
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 2,
                            Email = "said@amobay.com",
                            FirstName = "Said",
                            LastName = "Sassi",
                            PhotoPath = "images/said.jpg",
                            Power = 1
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 3,
                            Email = "aymen@samobay.com",
                            FirstName = "Aymen",
                            LastName = "Aymen",
                            PhotoPath = "images/aymen.png",
                            Power = 1
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 4,
                            Email = "idriss@samobay.com",
                            FirstName = "Idriss",
                            LastName = "Laabidi",
                            PhotoPath = "images/idriss.png",
                            Power = 2
                        });
                });

            modelBuilder.Entity("GCourrier.Shared.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "IT"
                        },
                        new
                        {
                            Id = 2,
                            Name = "HR"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Marketing"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Admin"
                        });
                });

            modelBuilder.Entity("GCourrier.Shared.Agent", b =>
                {
                    b.HasOne("GCourrier.Shared.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });
#pragma warning restore 612, 618
        }
    }
}
